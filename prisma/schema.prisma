// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model categories {
  id       Int        @id @default(autoincrement())
  name     String
  products products[]
}

model products {
  id         Int        @id @default(autoincrement())
  name       String
  price      Int
  category   categories @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt  DateTime   @default(now())
  sales      sales[]
}

model tables {
  id          Int    @id @default(autoincrement())
  numberTable Int    @unique
  position    Int    @unique
  currentSale sales?
}

model domiciliary {
  id    Int     @id @default(autoincrement())
  name  String
  sales sales[]
}

enum saleStatus {
  pending
  sent
  delivered
}

model sales {
  id            Int          @id @default(autoincrement())
  delivery      Boolean
  products      products[]
  deliveryPrice Int          @default(0)
  total         Int
  status        saleStatus
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  customer      customers    @relation(fields: [customerId], references: [id])
  customerId    Int
  table         tables?      @relation(fields: [tableId], references: [id])
  tableId       Int?         @unique
  domiciliary   domiciliary? @relation(fields: [domiciliaryId], references: [id])
  domiciliaryId Int?
}

model address {
  id             Int          @id @default(autoincrement())
  street         String
  number         String
  neighborhood   neighborhood @relation(fields: [neighborhoodId], references: [id])
  neighborhoodId Int
  customer       customers?
}

model neighborhood {
  id      Int       @id @default(autoincrement())
  name    String
  address address[]
}

model customers {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?
  createdAt DateTime @default(now())
  phone     String
  address   address  @relation(fields: [addressId], references: [id])
  addressId Int      @unique
  sales     sales[]
}
